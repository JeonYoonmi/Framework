/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.81
 * Generated at: 2022-07-13 03:28:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.math.BigDecimal;
import kr.or.ddit.dto.Product;
import java.util.ArrayList;

public final class cart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.math.BigDecimal");
    _jspx_imports_classes.add("kr.or.ddit.dto.Product");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" />\r\n");

	// 세션의 고유 아이디(장바구니 번호)
	String cartId = session.getId();
	

      out.write("\r\n");
      out.write("<title>장바구니</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- include 액션태그 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"jumbotron\">\r\n");
      out.write("		<!-- container : 이 안에 내용 있다. -->\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h1 class=\"display-3\">장바구니</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- -------------------- 장바구니 상세 내용 시작 -------------------- -->\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<table width=\"100%\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"left\">\r\n");
      out.write("						<a href=\"deleteCart.jsp?cartId=");
      out.print( cartId );
      out.write("\" class=\"btn btn-danger\">삭제하기</a>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td align=\"right\">\r\n");
      out.write("						<a href=\"shippingInfo.jsp?cartId=");
      out.print( cartId );
      out.write("\" class=\"btn btn-success\">주문하기</a>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>	\r\n");
      out.write("		\r\n");
      out.write("		<!-- 장바구니 출력 시작 -->\r\n");
      out.write("		<!-- padding-top : 영역의 위쪽 여백 50px -->\r\n");
      out.write("		<div style=\"padding-top:50px;\">\r\n");
      out.write("			<table class=\"table table-hover\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>상품</th><th>가격</th><th>수량</th>\r\n");
      out.write("					<th>금액</th><th>비고</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");
	// 스크립틀릿
					// 금액을 누적하는 변수
					double sum = 0;
				
					// 	addCart.jsp의 session.setAttribute("cartlist", list);	
					ArrayList<Product> cartList = (ArrayList<Product>)session.getAttribute("cartlist");	// list : 장바구니{P1234, P1236상품}
					
					// 장바구니가 비었다면
					if(cartList == null){
				
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"5\" style=\"text-align:center;\">장바구니에 상품이 없습니다.</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");
		
					}else{
					// 상품 리스트를 하나씩 꺼냄
						for(Product product : cartList){
							// 금액 = 가격 * 수량
							double total = product.getUnitPrice() * product.getQuantity();
							BigDecimal totalBing = new BigDecimal(total);
							// 금액이 누적됨
							sum = sum + total;
				
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>");
      out.print( product.getProductId() );
      out.write(' ');
      out.write('-');
      out.write(' ');
      out.print( product.getPname() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( product.getUnitPrice() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( product.getQuantity() );
      out.write("</td>\r\n");
      out.write("						<td>");
      out.print( totalBing );
      out.write("</td>\r\n");
      out.write("						<td>\r\n");
      out.write("							<a href=\"removeCart.jsp?id=");
      out.print( product.getProductId() );
      out.write("\" class=\"badge badge-danger\">삭제</a>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				");

						}
						
						// double 지수 형태의 알파벳 숫자를 원래 숫자로 바꿈
						BigDecimal big = new BigDecimal(sum);
				
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td></td>\r\n");
      out.write("					<td></td>\r\n");
      out.write("					<td>총액</td>\r\n");
      out.write("					<td>");
      out.print( big );
      out.write("</td>\r\n");
      out.write("					<td></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				");
	} 
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("			<a href=\"products.jsp\" class=\"btn btn-secondary\">&laquo;쇼핑 계속하기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 장바구니 출력 끝 -->\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- --------------------- 장바구니 상세 내용 끝 --------------------- -->\r\n");
      out.write("	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
